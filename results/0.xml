<findings><finding id="0"><link>I finished writing my free book on game programming!</link><score>-100</score><url>http://gameprogrammingpatterns.com/</url><file>pages/0_0.txt</file></finding><finding id="1"><link>GCC 4.9.0 Released</link><score>-5</score><url>http://gcc.gnu.org/ml/gcc/2014-04/msg00195.html</url><file>pages/0_1.txt</file></finding><finding id="2"><link>LibreSSL: OpenBSD's fork from OpenSSL</link><score>-3</score><url>http://www.libressl.org/</url><file>pages/0_2.txt</file></finding><finding id="3"><link>Project Naptha: a browser extension that enables text selection on any image</link><score>-104</score><url>http://projectnaptha.com/</url><file>pages/0_3.txt</file></finding><finding id="4"><link>Game Mechanic Explorer</link><score>-7</score><url>http://gamemechanicexplorer.com</url><file>pages/0_4.txt</file></finding><finding id="5"><link>My Quest to Build the Ultimate Music Player</link><score>-310</score><url>http://andrewkelley.me/post/quest-build-ultimate-music-player.html</url><file>pages/0_5.txt</file></finding><finding id="6"><link>Link-time optimization in GCC 4.9: A brief history</link><score>0</score><url>http://hubicka.blogspot.co.uk/2014/04/linktime-optimization-in-gcc-1-brief.html</url><file>pages/0_6.txt</file></finding><finding id="7"><link>How to be a great software developer</link><score>-1</score><url>http://peternixey.com/post/83510597580/how-to-be-a-great-software-developer</url><file>pages/0_7.txt</file></finding><finding id="8"><link>Origins of LibreSSL (the OpenBSD fork of OpenSSL)</link><score>-155</score><url>http://www.tedunangst.com/flak/post/origins-of-libressl</url><file>pages/0_9.txt</file></finding><finding id="9"><link>The case for formal verification of software</link><score>-100</score><url>http://permalink.gmane.org/gmane.comp.encryption.general/14818</url><file>pages/0_10.txt</file></finding><finding id="10"><link>Functional Programming in JavaScript === Garbage</link><score>0</score><url>http://awardwinningfjords.com/2014/04/21/functional-programming-in-javascript-equals-garbage.html</url><file>pages/0_13.txt</file></finding><finding id="11"><link>Maze Solver II</link><score>1</score><url>http://bl.ocks.org/mbostock/11189414</url><file>pages/0_14.txt</file></finding><finding id="12"><link>Worst common denominator programming [where OpenSSL portability code goes bad]</link><score>0</score><url>http://www.tedunangst.com/flak/post/worst-common-denominator-programming</url><file>pages/0_15.txt</file></finding><finding id="13"><link>A Quick Look at Haskell</link><score>0</score><url>http://devio.us/~dv/a-quick-look-at-haskell.html</url><file>pages/0_16.txt</file></finding><finding id="14"><link>Fixing old bugs, without the source.</link><score>-150</score><url>http://codelab.wordpress.com/2014/04/22/fixing-my-old-bugs-without-the-source/</url><file>pages/0_17.txt</file></finding><finding id="15"><link>PMP Preparation</link><score>0</score><url>http://www.pmstudy.com/</url><file>pages/0_18.txt</file></finding><finding id="16"><link>Embed a chess board on your site with chessboard.js</link><score>88</score><url>http://chessboardjs.com/</url><file>pages/0_19.txt</file></finding><finding id="17"><link>wreq: a capable new HTTP client library for Haskell</link><score>140</score><url>http://www.serpentine.com/wreq/</url><file>pages/0_20.txt</file></finding><finding id="18"><link>Getting Lazy with C++</link><score>702</score><url>http://bartoszmilewski.com/2014/04/21/getting-lazy-with-c/</url><file>pages/0_21.txt</file></finding><finding id="19"><link>Pyroscaphe: An HTML5/WebSocket Framework for Adding Touch Screen Input to PC Games</link><score>-90</score><url>http://jmdavisblog.blogspot.com/2014/04/pyroscaphe.html</url><file>pages/0_22.txt</file></finding><finding id="20"><link>ChaiScript - Easy to Use C++ Scripting - (almost) 5 Years Later</link><score>-2</score><url>http://blog2.emptycrate.com/content/chaiscript-almost-5-years-later</url><file>pages/0_23.txt</file></finding></findings>